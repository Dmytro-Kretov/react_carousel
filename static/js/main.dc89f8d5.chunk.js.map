{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","useState","selectedSteps","setSelectedSteps","selectedFrames","setSelectedFrames","selectedWidth","setSelectedWidth","selectedAnimation","setSelectedAnimation","xPos","setXpos","maxItemsWidth","length","className","style","width","transform","transition","map","image","left","src","alt","type","disabled","onClick","prev","newXPos","xPosLimit","htmlFor","step","min","max","id","value","onChange","event","target","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc89f8d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n}) => {\n  const [selectedSteps, setSelectedSteps] = useState(3);\n  const [selectedFrames, setSelectedFrames] = useState(3);\n  const [selectedWidth, setSelectedWidth] = useState(190);\n  const [selectedAnimation, setSelectedAnimation] = useState(1000);\n  const [xPos, setXpos] = useState(0);\n\n  const maxItemsWidth = images.length * selectedWidth * -1;\n\n  function prevBTN() {\n    if (xPos < 0) {\n      setXpos((prev) => {\n        const newXPos = prev + selectedWidth * selectedSteps;\n\n        return newXPos <= 0 ? newXPos : 0;\n      });\n    }\n  }\n\n  function nextBTN() {\n    if (xPos > (selectedWidth * selectedFrames)\n      - (images.length * selectedWidth)) {\n      setXpos((prev) => {\n        const newXPos = prev - selectedWidth * selectedSteps;\n        const xPosLimit = maxItemsWidth + selectedWidth * selectedFrames;\n\n        return newXPos >= xPosLimit ? newXPos : xPosLimit;\n      });\n    }\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"CarouselWrapper\"\n        style={{\n          width: selectedWidth * selectedFrames,\n        }}\n      >\n        <ul\n          className=\"CarouselList\"\n          style={{\n            transform: `translateX(${xPos}px)`,\n            transition: `${selectedAnimation}ms`,\n            width: selectedWidth * selectedFrames,\n          }}\n        >\n          {images.map(image => (\n            <li\n              key={image}\n              className=\"CarouselPhoto\"\n              style={{\n                left: `${xPos}px`,\n              }}\n            >\n              <img\n                src={image}\n                alt={image}\n                className=\"CarouselImage\"\n                style={{\n                  width: selectedWidth,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"buttonContainer\">\n        <button\n          type=\"button\"\n          disabled={xPos === 0}\n          className=\"button\"\n          onClick={prevBTN}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={xPos === maxItemsWidth + selectedWidth * selectedFrames}\n          className=\"button\"\n          onClick={nextBTN}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"input\">\n        <div className=\"inputForm\">\n          <label htmlFor=\"StepsSelector\">\n            Steps\n          </label>\n          <input\n            type=\"number\"\n            step={1}\n            min={1}\n            max={10}\n            id=\"StepsSelector\"\n            value={selectedSteps}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setSelectedSteps(+event.target.value);\n              setXpos(0);\n            }}\n          />\n        </div>\n        <div className=\"inputForm\">\n          <label htmlFor=\"FramesSelector\">\n            Frames\n          </label>\n          <input\n            type=\"number\"\n            step={1}\n            min={1}\n            max={10}\n            id=\"FramesSelector\"\n            value={selectedFrames}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setSelectedFrames(+event.target.value);\n              setXpos(0);\n            }}\n          />\n        </div>\n        <div className=\"inputForm\">\n          <label htmlFor=\"WidthSelector\">\n            Items Width\n          </label>\n          <input\n            type=\"number\"\n            step={20}\n            min={130}\n            max={190}\n            id=\"WidthSelector\"\n            value={selectedWidth}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setSelectedWidth(+event.target.value);\n              setXpos(0);\n            }}\n          />\n        </div>\n        <div className=\"inputForm\">\n          <label htmlFor=\"AnimationSelector\">\n            Animation Duration\n          </label>\n          <input\n            type=\"number\"\n            step={100}\n            min={1000}\n            max={2000}\n            id=\"AnimationSelector\"\n            value={selectedAnimation}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setSelectedAnimation(+event.target.value);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <div className=\"App__container\">\n          <h1\n            data-cy=\"title\"\n            className=\"title\"\n          >\n            {`Carousel with ${images.length} images`}\n          </h1>\n\n          <Carousel\n            images={images}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
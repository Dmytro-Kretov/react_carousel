{"version":3,"sources":["components/Input/Input.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Input","selectedSteps","setSelectedSteps","selectedFrames","setSelectedFrames","selectedWidth","setSelectedWidth","selectedAnimation","setSelectedAnimation","className","htmlFor","type","step","min","max","id","value","onChange","event","target","Carousel","images","frameSize","itemWidth","animationDuration","useState","xPos","setXpos","maxItemsWidth","length","style","width","transform","transition","map","image","left","src","alt","disabled","onClick","prev","newXPos","xPosLimit","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.005ec582.chunk.js","sourcesContent":["import React from 'react';\nimport './Input.scss';\n\ninterface Props {\n  selectedSteps: number;\n  selectedFrames: number;\n  selectedWidth: number;\n  selectedAnimation: number;\n  setSelectedSteps:React.Dispatch<React.SetStateAction<number>>;\n  setSelectedFrames:React.Dispatch<React.SetStateAction<number>>;\n  setSelectedWidth:React.Dispatch<React.SetStateAction<number>>;\n  setSelectedAnimation:React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst Input: React.FC<Props> = ({\n  selectedSteps,\n  setSelectedSteps,\n  selectedFrames,\n  setSelectedFrames,\n  selectedWidth,\n  setSelectedWidth,\n  selectedAnimation,\n  setSelectedAnimation,\n}) => {\n  return (\n    <div className=\"input\">\n      <div className=\"inputForm\">\n        <label htmlFor=\"StepsSelector\">\n          Steps\n        </label>\n        <input\n          type=\"number\"\n          step={1}\n          min={1}\n          max={10}\n          id=\"StepsSelector\"\n          value={selectedSteps}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setSelectedSteps(+event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"inputForm\">\n        <label htmlFor=\"FramesSelector\">\n          Frames\n        </label>\n        <input\n          type=\"number\"\n          step={1}\n          min={1}\n          max={10}\n          id=\"FramesSelector\"\n          value={selectedFrames}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setSelectedFrames(+event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"inputForm\">\n        <label htmlFor=\"WidthSelector\">\n          Items Width\n        </label>\n        <input\n          type=\"number\"\n          step={20}\n          min={130}\n          max={190}\n          id=\"WidthSelector\"\n          value={selectedWidth}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setSelectedWidth(+event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"inputForm\">\n        <label htmlFor=\"AnimationSelector\">\n          Animation Duration\n        </label>\n        <input\n          type=\"number\"\n          step={100}\n          min={1000}\n          max={2000}\n          id=\"AnimationSelector\"\n          value={selectedAnimation}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setSelectedAnimation(+event.target.value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState } from 'react';\nimport './Carousel.scss';\nimport Input from '../Input/Input';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [selectedSteps, setSelectedSteps] = useState(step);\n  const [selectedFrames, setSelectedFrames] = useState(frameSize);\n  const [selectedWidth, setSelectedWidth] = useState(itemWidth);\n  const [selectedAnimation, setSelectedAnimation] = useState(animationDuration);\n  const [xPos, setXpos] = useState(0);\n\n  const maxItemsWidth = images.length * selectedWidth * -1;\n\n  function prevBTN() {\n    if (xPos < 0) {\n      setXpos((prev) => {\n        const newXPos = prev + selectedWidth * selectedSteps;\n\n        return newXPos <= 0 ? newXPos : 0;\n      });\n    }\n  }\n\n  function nextBTN() {\n    if (xPos > (selectedWidth * selectedFrames)\n      - (images.length * selectedWidth)) {\n      setXpos((prev) => {\n        const newXPos = prev - selectedWidth * selectedSteps;\n        const xPosLimit = maxItemsWidth + selectedWidth * selectedFrames;\n\n        return newXPos >= xPosLimit ? newXPos : xPosLimit;\n      });\n    }\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"CarouselWrapper\"\n        style={{\n          width: selectedWidth * selectedFrames,\n        }}\n      >\n        <ul\n          className=\"CarouselList\"\n          style={{\n            transform: `translateX(${xPos}px)`,\n            transition: `${selectedAnimation}ms`,\n            width: selectedWidth * selectedFrames,\n          }}\n        >\n          {images.map(image => (\n            <li\n              key={image}\n              className=\"CarouselPhoto\"\n              style={{\n                left: `${xPos}px`,\n              }}\n            >\n              <img\n                src={image}\n                alt={image}\n                className=\"CarouselImage\"\n                style={{\n                  width: selectedWidth,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"buttonContainer\">\n        <button\n          type=\"button\"\n          disabled={xPos === 0}\n          className=\"button\"\n          onClick={prevBTN}\n        >\n          Prev\n        </button>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          disabled={xPos === maxItemsWidth + selectedWidth * selectedFrames}\n          className=\"button\"\n          onClick={nextBTN}\n        >\n          Next\n        </button>\n      </div>\n      <Input\n        selectedSteps={selectedSteps}\n        selectedFrames={selectedFrames}\n        selectedAnimation={selectedAnimation}\n        selectedWidth={selectedWidth}\n        setSelectedAnimation={setSelectedAnimation}\n        setSelectedFrames={setSelectedFrames}\n        setSelectedSteps={setSelectedSteps}\n        setSelectedWidth={setSelectedWidth}\n      />\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <div className=\"App__container\">\n          <h1\n            data-cy=\"title\"\n            className=\"title\"\n          >\n            {`Carousel with ${images.length} images`}\n          </h1>\n\n          <Carousel\n            images={images}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}